.transition(@transition) {
	-webkit-transition: @transition;  
	-moz-transition:    @transition;
	-ms-transition:     @transition; 
	-o-transition:      @transition; 
	transition:         @transition;  
}

.transform(@transform) {
	-webkit-transform: @transform;  
	-moz-transform:    @transform;
	-ms-transform:     @transform; 
	-o-transform:      @transform;  
	transform:         @transform;  
}

.placeholder(@color) {
	&::-webkit-input-placeholder { color: @color; }
	&:-moz-placeholder { color: @color; }
	&::-moz-placeholder { color: @color; }
	&:-ms-input-placeholder { color: @color; }
}

.box-shadow(@box-shadow) {
	-webkit-box-shadow: @box-shadow; 
	-moz-box-shadow: @box-shadow;
	box-shadow: @box-shadow;
}

.border-radius(@border-radius) {
	-webkit-border-radius: @border-radius;
	border-radius: @border-radius;
	-moz-border-radius: @border-radius;
}

@small-smartphone: ~"all and (max-width: "(@smartphone-width - 1) ~")";
@smartphone: ~"all and (max-width: "(@tablet-width - 1) ~")";

@tablet: ~"all and (max-width: @{desktop-min-width})";
@only-tablet: ~"all and (min-width: @{tablet-width}) and (max-width: @{desktop-min-width})";
@tablet-up: ~"all and (min-width: @{tablet-width})";

@desktop-min: ~"all and (max-width: "(@desktop-width - 1) ~")";
@only-desktop-min: ~"all and (min-width: "(@desktop-min-width + 1) ~") and (max-width: "(@desktop-width - 1) ~")";

@desktop: ~"all and (min-width: @{desktop-width})";
